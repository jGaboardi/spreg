import unittest
import numpy as np
import libpysal
import spreg
import geopandas as gpd
RTOL = 1e-04

class TestNSLX(unittest.TestCase):
    def setUp(self):
        dfs = gpd.read_file(libpysal.examples.get_path('Chi-SDOH.shp'))
        self.y = dfs[['HIS_ct']]
        self.x = dfs[['Blk14P','Hisp14P','EP_NOHSDP']]
        self.coords = dfs[["COORD_X","COORD_Y"]]

    def test_nslx(self):
        reg = spreg.NSLX(self.y, self.x, self.coords, var_flag=0)
        np.testing.assert_allclose(reg.betas, np.array([1.790865e+01, 1.791048e-01, 5.818256e-02, 6.546232e-01,
            1.716674e+01, 7.547399e+02, 1.002117e+01]), rtol=RTOL)
        vm = np.array([[ 1.32982953e-02, -2.70314251e-04, -5.10274538e-04,
         8.14586443e-04, -8.43389682e-03, -5.29610025e-01,
        -5.10274566e-04],
       [-2.70314251e-04,  2.99208963e-05,  4.94456008e-05,
        -9.21262155e-05,  4.44680286e-04,  5.22594349e-02,
         4.94456020e-05],
       [-5.10274538e-04,  4.94456008e-05,  1.30464676e-04,
        -2.07207703e-04,  1.09570738e-03,  1.55138205e-01,
         1.30464679e-04],
       [ 8.14586443e-04, -9.21262155e-05, -2.07207703e-04,
         3.89133317e-04, -9.05094700e-04, -1.30028232e-01,
        -2.07207704e-04],
       [-8.43389682e-03,  4.44680286e-04,  1.09570738e-03,
        -9.05094700e-04,  3.89348917e-02,  4.34021102e+00,
         1.09570746e-03],
       [-5.29610025e-01,  5.22594349e-02,  1.55138205e-01,
        -1.30028232e-01,  4.34021102e+00,  7.09255550e+02,
         1.55138212e-01],
       [-5.10274566e-04,  4.94456020e-05,  1.30464679e-04,
        -2.07207704e-04,  1.09570746e-03,  1.55138212e-01,
         1.30464725e-04]])
        np.testing.assert_allclose(reg.vm, vm,RTOL)

    def test_nslx_var_flag(self):
        reg = spreg.NSLX(self.y, self.x, self.coords, var_flag=1)
        np.testing.assert_allclose(reg.betas, np.array([1.790865e+01, 1.791048e-01, 5.818256e-02, 6.546232e-01,
            1.716674e+01, 7.547399e+02, 1.002117e+01]), rtol=RTOL)
        vm = np.array([[ 1.88884965e-01, -2.06807406e-03, -2.85599866e-03,
                1.48378871e-04,  0.00000000e+00,  0.00000000e+00,
                0.00000000e+00],
            [-2.06807406e-03,  6.50027002e-05,  9.67820088e-05,
            -1.48821928e-04,  0.00000000e+00,  0.00000000e+00,
                0.00000000e+00],
            [-2.85599866e-03,  9.67820088e-05,  2.32670018e-04,
            -3.52689097e-04,  0.00000000e+00,  0.00000000e+00,
                0.00000000e+00],
            [ 1.48378871e-04, -1.48821928e-04, -3.52689097e-04,
                7.56495163e-04,  0.00000000e+00,  0.00000000e+00,
                0.00000000e+00],
            [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                0.00000000e+00,  2.89916228e+00,  8.89079847e+44,
            -3.33925795e-01],
            [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                0.00000000e+00,  8.89079847e+44,  2.82234869e+92,
            -3.55079200e+44],
            [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
                0.00000000e+00, -3.33925795e-01, -3.55079200e+44,
                1.31604605e-01]])
        np.testing.assert_allclose(reg.vm, vm,RTOL)        

    def test_nslx_slxvars(self):
        reg = spreg.NSLX(self.y, self.x, self.coords, var_flag=1,
        slx_vars=[False,False,True])
        np.testing.assert_allclose(reg.betas, np.array([17.91091448,  0.18034216,  0.05403789,  0.65076196,  9.4025247 ]), rtol=RTOL)
        vm = np.array([[ 1.89298625e-01, -2.07260316e-03, -2.86225332e-03,
         1.48703822e-04,  0.00000000e+00],
       [-2.07260316e-03,  6.51450567e-05,  9.69939622e-05,
        -1.49147849e-04,  0.00000000e+00],
       [-2.86225332e-03,  9.69939622e-05,  2.33179567e-04,
        -3.53461490e-04,  0.00000000e+00],
       [ 1.48703822e-04, -1.49147849e-04, -3.53461490e-04,
         7.58151894e-04,  0.00000000e+00],
       [ 0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
         0.00000000e+00,  5.85115024e-02]])
        np.testing.assert_allclose(reg.vm, vm,RTOL)  

    def test_nslx_power(self):
        reg = spreg.NSLX(self.y, self.x, self.coords, var_flag=0,
        params = [(10,np.inf,"power")], slx_vars=[False,False,True])
        np.testing.assert_allclose(reg.betas, np.array([17.94859813,  0.18294561,  0.06068974,  0.66305948,  8.6153789 ]), rtol=RTOL)
        vm = np.array([[ 7.19108805e-04, -1.00284242e-04, -2.52880764e-04,
         4.35011662e-04, -1.45522568e-03],
       [-1.00284242e-04,  2.30215512e-05,  3.79373272e-05,
        -7.61316838e-05,  2.13906221e-04],
       [-2.52880764e-04,  3.79373272e-05,  1.06392834e-04,
        -1.79671246e-04,  5.92209541e-04],
       [ 4.35011662e-04, -7.61316838e-05, -1.79671246e-04,
         3.79013183e-04,  5.69796786e-04],
       [-1.45522568e-03,  2.13906221e-04,  5.92209541e-04,
         5.69796786e-04,  1.12445775e-01]])
        np.testing.assert_allclose(reg.vm, vm,RTOL)

if __name__ == '__main__':
    unittest.main()
